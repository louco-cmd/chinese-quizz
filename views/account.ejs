<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Âä†Ê≤πÔºÅmy account</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css" rel="stylesheet">
  <style>
    body {
        padding-bottom: 80px;
    }
    .progress {
      height: 8px;
    }
    .quiz-card {
      transition: transform 0.2s;
    }
    .quiz-card:hover {
      transform: translateY(-2px);
    }

/* üìç CONTRIBUTIONS - VERSION RESPONSIVE SANS SCROLL */
.contributions-fullwidth {
  width: 100%;
  background: #f8f9fa;
  border-bottom: 1px solid #dee2e6;
  padding: 1rem 0;
  margin: 0;
}

.contributions-wrapper {
  width: 100%;
  max-width: 100%;
  padding: 0 1rem;
}

.contributions-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(12px, 1fr));
  grid-auto-rows: 12px;
  gap: 2px;
  margin: 0 auto;
  width: 100%;
  max-width: 900px; /* Largeur max pour √©viter l'√©tirement excessif */
}

.contribution-day {
  width: 100%;
  height: 100%;
  aspect-ratio: 1; /* Garde le carr√© parfait */
  border-radius: 2px;
  background-color: #ebedf0;
  cursor: pointer;
  position: relative;
  border: 1px solid rgba(0,0,0,0.05);
  transition: all 0.2s ease;
  min-width: 10px;
  min-height: 10px;
}

.contribution-day:hover {
  transform: scale(1.2);
  z-index: 10;
}

.contribution-day:hover::after {
  content: attr(data-count) " quiz le " attr(data-date);
  position: absolute;
  bottom: 100%;
  left: 50%;
  transform: translateX(-50%);
  background: #000;
  color: white;
  padding: 0.5rem 1rem;
  border-radius: 0.5rem;
  font-size: 0.875rem;
  white-space: nowrap;
  z-index: 1000;
  box-shadow: 0 0.25rem 0.75rem rgba(0,0,0,0.15);
}

/* Niveaux de couleur */
.level-0 { background-color: #ebedf0; }
.level-1 { background-color: #9be9a8; }
.level-2 { background-color: #40c463; }
.level-3 { background-color: #30a14e; }
.level-4 { background-color: #216e39; }

/* L√©gende compacte */
.contributions-legend {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
  margin-top: 0.5rem;
  font-size: 11px;
  color: #666;
}

.color-scale {
  display: flex;
  gap: 2px;
}

.color-level {
  width: 10px;
  height: 10px;
  border-radius: 1px;
}

/* üî• VERSION MOBILE OPTIMIS√âE */
@media (max-width: 768px) {
  .contributions-wrapper {
    padding: 0 0.5rem;
  }
  
  .contributions-grid {
    grid-auto-rows: 10px;
    gap: 1px;
    max-width: 100%;
  }
  
  .contribution-day {
    min-width: 8px;
    min-height: 8px;
  }
  
  /* Ajustement pour petits √©crans */
  @media (max-width: 480px) {
    .contributions-grid {
      grid-auto-rows: 8px;
    }
    
    .contribution-day {
      min-width: 6px;
      min-height: 6px;
    }
  }
}
  </style>
</head>
<body>
  <!-- Header -->
  <div class="d-flex justify-content-between align-items-center bg-primary text-white p-3">
    <span class="fs-3 fw-bold user-select-all" style="cursor: pointer;" onclick="window.location='/dashboard'">
      Âä†Ê≤πÔºÅ
    </span>
  </div>

  <%- include('partials/navbar', {currentPage: 'account'}) %>
  <%- include('partials/installation') %>

  <!-- üìç DAMIER FULL WIDTH EN HAUT - VERSION COMPACTE -->
  <section class="contributions-fullwidth">
    <div class="container-fluid px-0">
      <div class="contributions-wrapper">
        <!-- Titre et total -->
        <div class="d-flex justify-content-between align-items-center mb-2">
          <h6 class="mb-0 d-flex align-items-center">
            <i class="bi bi-calendar3 me-2 text-primary"></i>Contributions
          </h6>
          <small class="text-muted" id="contributions-total">0 quiz</small>
        </div>
        
        <!-- Grille des contributions -->
        <div class="contributions-grid" id="contributionsGrid">
          <div class="text-center text-muted py-3">
            <div class="spinner-border spinner-border-sm" role="status"></div>
            <span class="ms-2">Loading...</span>
          </div>
        </div>

        <!-- L√©gende compacte -->
        <div class="contributions-legend">
          <span>less</span>
          <div class="color-scale">
            <div class="color-level level-0" title="0 quiz"></div>
            <div class="color-level level-1" title="1 quiz"></div>
            <div class="color-level level-2" title="2-3 quiz"></div>
            <div class="color-level level-3" title="4-5 quiz"></div>
            <div class="color-level level-4" title="6+ quiz"></div>
          </div>
          <span>More</span>
        </div>
      </div>
    </div>
  </section>

  <!-- Le reste de votre code reste inchang√© -->
  <section class="container my-4">
    <div class="row g-4">
      <!-- Colonne gauche -->
      <div class="col-12 col-lg-4">
        <!-- Carte info utilisateur -->
          <!-- Carte info utilisateur - VERSION COMPACTE -->
          <div class="card shadow-sm">
            <div class="card-body py-3">
              <div class="row align-items-center">
                <!-- Photo r√©duite -->
                <div class="col-auto">
                  <div id="userPhotoContainer" class="rounded-circle bg-light text-primary d-flex justify-content-center align-items-center" 
                      style="width:60px;height:60px;border: 2px solid #0d6efd;">
                    <i class="bi bi-person-fill" style="font-size: 24px;"></i>
                  </div>
                </div>
                
                <!-- Infos texte -->
                <div class="col">
                  <h5 id="userName" class="card-title mb-1 fw-bold text-truncate"></h5>
                  <p id="wordCount" class="card-text text-muted mb-0 small">
                    <i class="bi bi-journal-text me-1"></i>
                    <span id="wordCountNumber">0</span> mots
                  </p>
                </div>
                
                <!-- Badge statistique optionnel -->
                <div class="col-auto">
                  <span class="badge bg-primary rounded-pill">
                    <i class="bi bi-star-fill me-1"></i>
                    Actif
                  </span>
                </div>
              </div>
            </div>
          </div>

        <!-- Stats Quiz D√©taill√©es -->
        <div class="card shadow-sm mt-3">
          <div class="card-body">
            <h5 class="card-title d-flex align-items-center">
              <i class="bi bi-graph-up me-2"></i>Performance
            </h5>
            <div id="quiz-stats">
              <div class="text-center py-2">
                <div class="spinner-border spinner-border-sm" role="status"></div>
                <span class="ms-2">Loading...</span>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Colonne droite -->
      <div class="col-12 col-lg-8">
        <!-- Statistiques des mots -->
        <div class="card shadow-sm">
          <div class="card-body">
            <h4 class="card-title">Your words statistics</h4>
            <ul id="hskStats" class="list-group list-group-flush mt-3"></ul>
          </div>
        </div>

        <!-- Derniers Quiz -->
        <div class="card shadow-sm mt-4">
          <div class="card-body">
            <div class="d-flex justify-content-between align-items-center mb-3">
              <h4 class="card-title mb-0 d-flex align-items-center">
                <i class="bi bi-clock-history me-2"></i>lasts Quiz
              </h4>
            </div>
            <div id="recent-quizzes">
              <div class="text-center text-muted py-3">
                <div class="spinner-border spinner-border-sm" role="status"></div>
                <span class="ms-2">loading quizes...</span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

<script>

async function loadUserData() {
  try {
    const res = await fetch('/account-info'); 
    if (!res.ok) throw new Error(`HTTP Error: ${res.status}`);
    
    const data = await res.json(); 
    
    // Affichage des infos COMPACT
    document.getElementById('userName').textContent = data.name;
    document.getElementById('wordCountNumber').textContent = data.wordCount;

    // Stats HSK
    const hskStatsElement = document.getElementById('hskStats');
    hskStatsElement.innerHTML = '';
    
    for(const level in data.stats) {
      const li = document.createElement('li');
      li.className = 'list-group-item d-flex justify-content-between align-items-center py-2';
      li.textContent = level;
      
      const badge = document.createElement('span');
      const badgeClass = level === 'Street' ? 'bg-success' : 'bg-primary'; 
      badge.className = `badge ${badgeClass} rounded-pill`;
      badge.textContent = data.stats[level];
      
      li.appendChild(badge);
      hskStatsElement.appendChild(li);
    }

  } catch (err) {
    console.error('Erreur chargement donn√©es:', err);
    document.getElementById('wordCountNumber').textContent = '0';
  }
}

async function loadQuizStats() {
  try {
    console.log('üîÑ Chargement des stats quiz...');
    const response = await fetch('/api/quiz/history?limit=5');
    
    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }
    
    const contentType = response.headers.get('content-type');
    if (!contentType || !contentType.includes('application/json')) {
      throw new Error(`Expected JSON but got: ${contentType}`);
    }
    
    const data = await response.json();
    console.log('‚úÖ Stats quiz charg√©es:', data);
    
    // V√©rifier si des donn√©es existent
    if (data.stats.total_quizzes === 0) {
      displayNoQuizData();
    } else {
      displayQuizStats(data);
    }
    
  } catch (error) {
    console.error('‚ùå Erreur chargement stats quiz:', error);
    displayQuizStatsError();
  }
}

async function loadContributionsGrid() {
  try {
    console.log('üîÑ Loading...');
    
    // AJOUTER L'ANN√âE EN COURS DANS LA REQU√äTE
    const currentYear = new Date().getFullYear();
    const response = await fetch(`/api/contributions?year=${currentYear}`);
    
    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }
    
    const contentType = response.headers.get('content-type');
    if (!contentType || !contentType.includes('application/json')) {
      throw new Error(`Expected JSON but got: ${contentType}`);
    }
    
    const data = await response.json();
    console.log('‚úÖ Contributions charg√©es:', data);
    
    // V√©rifier si des donn√©es existent
    if (data.length === 0) {
      displayNoContributions();
    } else {
      // Mettre √† jour le total
      const totalQuizzes = data.reduce((sum, item) => sum + parseInt(item.count || 0), 0);
      const totalEl = document.getElementById('contributions-total');
      if (totalEl) totalEl.textContent = `${totalQuizzes} quiz`;
      
      // G√©n√©rer le damier
      generateContributionsGrid(data);
    }
    
  } catch (error) {
    console.error('‚ùå Erreur chargement contributions:', error);
    displayContributionsError();
  }
}

function displayNoQuizData() {
  const statsContainer = document.getElementById('quiz-stats');
  statsContainer.innerHTML = `
    <div class="text-center text-muted py-3">
      <i class="bi bi-graph-up display-6 text-muted"></i>
      <div class="small mt-2">0 quiz to show</div>
      <a href="/quiz-pinyin" class="btn btn-outline-primary btn-sm mt-2">Commencer</a>
    </div>
  `;
  
  const recentQuizzes = document.getElementById('recent-quizzes');
  recentQuizzes.innerHTML = `
    <div class="text-center text-muted py-3">
      <i class="bi bi-clock-history"></i>
      <div class="small mt-1">No recent quiz</div>
      <a href="/quiz-pinyin" class="btn btn-outline-primary btn-sm mt-2">Premier quiz</a>
    </div>
  `;
}

function displayQuizStats(data) {
  const statsContainer = document.getElementById('quiz-stats');
  statsContainer.innerHTML = `
    <div class="text-center">
      <div class="h4 text-primary mb-1">${Math.round(data.stats.average_ratio || 0)}%</div>
      <div class="text-muted small">Average score</div>
    </div>
    <div class="row text-center mt-3">
      <div class="col-6">
        <div class="h6 mb-1">${data.stats.total_quizzes}</div>
        <div class="text-muted small">Total quiz</div>
      </div>
      <div class="col-6">
        <div class="h6 mb-1">${data.stats.best_score ? Math.round(data.stats.best_score) : 0}%</div>
        <div class="text-muted small">Best score</div>
      </div>
    </div>
  `;
  
  // Afficher les derniers quiz
  const recentQuizzes = document.getElementById('recent-quizzes');
  if (data.quizzes && data.quizzes.length > 0) {
    recentQuizzes.innerHTML = data.quizzes.map(quiz => `
      <div class="d-flex justify-content-between align-items-center border-bottom pb-2 mb-2">
        <div>
          <span class="badge bg-${getQuizTypeColor(quiz.quiz_type)} me-2">
            ${quiz.quiz_type}
          </span>
          <strong>${quiz.score}/${quiz.total_questions}</strong>
          <span class="text-${getScoreColor(quiz.ratio)} small ms-1">
            (${Math.round(quiz.ratio)}%)
          </span>
        </div>
        <small class="text-muted">
          ${new Date(quiz.date_completed).toLocaleDateString('fr-FR')}
        </small>
      </div>
    `).join('');
  }
}

function displayQuizStatsError() {
  const statsContainer = document.getElementById('quiz-stats');
  statsContainer.innerHTML = `
    <div class="alert alert-warning py-2 mb-0">
      <small><i class="bi bi-exclamation-triangle me-1"></i>Stats unavailable at the moment</small>
    </div>
  `;
  
  const recentQuizzes = document.getElementById('recent-quizzes');
  recentQuizzes.innerHTML = `
    <div class="alert alert-warning py-2">
      <small><i class="bi bi-exclamation-triangle me-1"></i>Unavailable at the moment</small>
    </div>
  `;
}

function displayNoContributions() {
  document.getElementById('contributions-total').textContent = '0 quiz';
  document.getElementById('contributionsGrid').innerHTML = `
    <div class="text-center text-muted py-4">
      <i class="bi bi-calendar3 display-6"></i>
      <div class="small mt-2">No contribution</div>
      <div class="small">Do your first quiz !</div>
    </div>
  `;
}

function displayContributionsError() {
  document.getElementById('contributionsGrid').innerHTML = `
    <div class="text-center text-warning py-3">
      <i class="bi bi-exclamation-triangle"></i>
      <div class="small mt-1">Data unavailable for the moment</div>
    </div>
  `;
}

// ========== FONCTIONS UTILITAIRES ==========

function generateContributionsGrid(contributionsData) {
  const grid = document.getElementById('contributionsGrid');
  if (!grid) {
    console.error('‚ùå generateContributionsGrid: element #contributionsGrid introuvable');
    return;
  }
  console.log('üîÑ generateContributionsGrid called, items:', contributionsData && contributionsData.length);

  const contributionsMap = {};
  
  // Cr√©er un map pour un acc√®s rapide
  contributionsData.forEach(item => {
    contributionsMap[item.date] = parseInt(item.count);
  });

  // üî• UTILISER L'ANN√âE EN COURS
  const dates = generateCurrentYearDates();
  console.log('üîé generateCurrentYearDates returned', dates.length, 'dates');

  // Vider la grille
  grid.innerHTML = '';

  // G√©n√©rer les jours directement
  dates.forEach(date => {
    const dateString = date.toISOString().split('T')[0];
    const count = contributionsMap[dateString] || 0;
    const level = getContributionLevel(count);
    
    const dayElement = document.createElement('div');
    dayElement.className = `contribution-day level-${level}`;
    dayElement.setAttribute('data-count', count);
    dayElement.setAttribute('data-date', formatDate(dateString));
    
    grid.appendChild(dayElement);
  });

  // Message si aucune donn√©e
  if (dates.length === 0) {
    grid.innerHTML = `<div class="text-center text-muted py-4">Aucune date g√©n√©r√©e pour cette ann√©e</div>`;
  }
}

function generateCurrentYearDates() {
  const dates = [];
  const today = new Date();
  const currentYear = today.getFullYear();
  
  // D√©but de l'ann√©e en cours (1er janvier)
  const startDate = new Date(currentYear, 0, 1); // 1er janvier de cette ann√©e
  
  // Fin = aujourd'hui ou 31 d√©cembre si on est dans l'ann√©e en cours
  const endDate = today.getFullYear() === currentYear ? 
    today : new Date(currentYear, 11, 31); // 31 d√©cembre

  // Trouver le premier lundi de l'ann√©e (ou avant si n√©cessaire)
  const firstMonday = new Date(startDate);
  const dayOfWeek = firstMonday.getDay();
  const diffToMonday = dayOfWeek === 0 ? -6 : 1 - dayOfWeek;
  firstMonday.setDate(firstMonday.getDate() + diffToMonday);

  // G√©n√©rer toutes les dates du premier lundi jusqu'√† aujourd'hui/fin d'ann√©e
  const currentDate = new Date(firstMonday);
  while (currentDate <= endDate) {
    dates.push(new Date(currentDate));
    currentDate.setDate(currentDate.getDate() + 1);
  }

  console.log(`üìÖ G√©n√©ration ${dates.length} jours pour ${currentYear}, du ${firstMonday.toLocaleDateString()} au ${endDate.toLocaleDateString()}`);
  return dates;
}

function getContributionLevel(count) {
  if (count === 0) return 0;
  if (count === 1) return 1;
  if (count <= 3) return 2;
  if (count <= 5) return 3;
  return 4;
}

function formatDate(dateString) {
  return new Date(dateString).toLocaleDateString('fr-FR');
}

function getScoreColor(ratio) {
  if (ratio >= 80) return 'success';
  if (ratio >= 60) return 'warning';
  return 'danger';
}

function getQuizTypeColor(type) {
  const colors = {
    'pinyin': 'info',
    'character': 'warning',
    'mixed': 'success'
  };
  return colors[type] || 'secondary';
}

function setActiveNavItem() {
  const path = window.location.pathname;
  document.querySelectorAll('.nav-link').forEach(link => {
    link.classList.remove('active');
    const page = link.getAttribute('data-page');
    if (path.includes(page)) {
      link.classList.add('active');
    }
  });
}

// Initialisation
document.addEventListener('DOMContentLoaded', function() {
  setActiveNavItem();
  loadUserData();
  loadQuizStats();
  loadContributionsGrid();
});

window.addEventListener('popstate', setActiveNavItem);
</script>
  <script src="/js/global.js"></script>
</body>
</html>