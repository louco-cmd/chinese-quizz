<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1"/>
  <title>加油！</title>

  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css" rel="stylesheet">
  
  <style>
    body {
      background: linear-gradient(180deg, #0d6efd 0%, #0dcaf0 100%);
      min-height: 100vh;
      padding: 0;
      margin: 0;
      overflow: hidden;
    }
    
    .screen-container {
      height: 100vh;
      display: flex;
      flex-direction: column;
    }
    
    .content-area {
      flex: 1;
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 20px;
      overflow: hidden;
    }
    
    /* Logo animé */
    .app-logo {
      font-size: 5rem;
      font-weight: bold;
      color: white;
      text-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
      margin-bottom: 2rem;
      animation: logoFloat 3s ease-in-out infinite;
    }
    
    @keyframes logoFloat {
      0%, 100% { transform: translateY(0); }
      50% { transform: translateY(-10px); }
    }
    
    /* Container principal */
    .input-container {
      width: 100%;
      max-width: 450px;
      padding: 0 20px;
    }
    
    /* Label */
    .input-label {
      color: white;
      font-size: 1.1rem;
      font-weight: 600;
      margin-bottom: 1rem;
      text-align: center;
      text-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }
    
    /* Champ de saisie */
    .chinese-input {
      background: white;
      border: none;
      border-radius: 20px;
      padding: 20px 30px;
      font-size: 2rem;
      text-align: center;
      width: 100%;
      box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);
      transition: all 0.3s ease;
      color: #0d6efd;
      font-weight: 600;
    }
    
    .chinese-input:focus {
      outline: none;
      box-shadow: 0 12px 40px rgba(0, 0, 0, 0.25);
      transform: translateY(-2px);
    }
    
    .chinese-input::placeholder {
      color: #adb5bd;
      font-size: 1.2rem;
      font-weight: 400;
      line-height: 5;
      align-items: center;
    }
    
    /* Bouton submit */
    .submit-btn {
      background: white;
      color: #0d6efd;
      border: none;
      border-radius: 20px;
      padding: 18px 40px;
      font-size: 1.2rem;
      font-weight: 600;
      width: 100%;
      margin-top: 1.5rem;
      box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);
      transition: all 0.3s ease;
      opacity: 0;
      transform: translateY(20px);
      pointer-events: none;
    }
    
    .submit-btn.visible {
      opacity: 1;
      transform: translateY(0);
      pointer-events: auto;
    }
    
    .submit-btn:hover {
      transform: translateY(-3px);
      box-shadow: 0 12px 40px rgba(0, 0, 0, 0.25);
      background: #f8f9fa;
    }
    
    .submit-btn:active {
      transform: translateY(-1px);
    }
    
    /* Message de statut */
    .status-message {
      color: white;
      text-align: center;
      margin-top: 1.5rem;
      font-size: 1rem;
      min-height: 30px;
      font-weight: 500;
      text-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }
    
    /* Animation d'ajout réussi */
    @keyframes successPulse {
      0% { transform: scale(1); }
      50% { transform: scale(1.05); }
      100% { transform: scale(1); }
    }
    
    .success-animation {
      animation: successPulse 0.6s ease;
    }
    
    @keyframes checkmarkAppear {
      0% {
        opacity: 0;
        transform: scale(0) rotate(-45deg);
      }
      50% {
        transform: scale(1.2) rotate(-45deg);
      }
      100% {
        opacity: 1;
        transform: scale(1) rotate(-45deg);
      }
    }
    
    .success-checkmark {
      position: fixed;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%) scale(0);
      width: 120px;
      height: 120px;
      background: white;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      box-shadow: 0 10px 50px rgba(0, 0, 0, 0.3);
      z-index: 10000;
      opacity: 0;
    }
    
    .success-checkmark.show {
      animation: successCheckmark 1s ease forwards;
    }
    
    @keyframes successCheckmark {
      0% {
        opacity: 0;
        transform: translate(-50%, -50%) scale(0);
      }
      50% {
        opacity: 1;
        transform: translate(-50%, -50%) scale(1.1);
      }
      80% {
        transform: translate(-50%, -50%) scale(0.95);
      }
      100% {
        opacity: 0;
        transform: translate(-50%, -50%) scale(0.8);
      }
    }
    
    .success-checkmark i {
      font-size: 4rem;
      color: #198754;
    }
    
    /* Validation visuelle */
    .chinese-input.valid {
      border: 3px solid #198754;
    }
    
    .chinese-input.invalid {
      border: 3px solid #dc3545;
    }
    
    .error-message {
      color: #ffe5e5;
      font-size: 0.9rem;
      text-align: center;
      margin-top: 0.5rem;
      text-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
    }

    /* Écrans secondaires */
    .floating-card {
      background: white;
      border-radius: 20px;
      padding: 30px;
      max-width: 450px;
      width: 100%;
      box-shadow: 0 10px 40px rgba(0, 0, 0, 0.2);
    }
    
    .screen {
      display: none;
    }
    
    .screen.active {
      display: flex;
      justify-content: center;
      align-items: center;
      width: 100%;
      height: 100%;
    }
    
    .chinese-preview {
      font-size: 3rem;
      font-weight: bold;
      color: #0d6efd;
      text-align: center;
      margin: 20px 0;
    }
    
    .word-info {
      background: #f8f9fa;
      border-radius: 12px;
      padding: 15px;
      margin-bottom: 15px;
    }
    
    .word-info-row {
      display: flex;
      justify-content: space-between;
      padding: 8px 0;
      border-bottom: 1px solid #dee2e6;
    }
    
    .word-info-row:last-child {
      border-bottom: none;
    }
    
    .word-info-label {
      font-weight: 600;
      color: #6c757d;
    }
    
    .word-info-value {
      color: #212529;
      text-align: right;
      max-width: 60%;
    }
    
    @media (max-width: 767.98px) {
      .app-logo {
        font-size: 4rem;
        margin-bottom: 1.5rem;
      }
      
      .chinese-input {
        font-size: 1.5rem;
        padding: 15px 20px;
      }
      
      .submit-btn {
        padding: 15px 30px;
        font-size: 1.1rem;
      }
    }
  </style>
</head>
<body>

  <!-- Navigation -->
  <%- include('partials/navbar', {currentPage: 'dashboard'}) %>

<!-- ÉCRAN 1 : SAISIE PRINCIPALE -->
<div class="screen-container">
  <div class="content-area">
    
    <div id="inputScreen" class="screen active">
      <div class="input-container">
        <!-- Logo -->
        <div class="app-logo text-center">加油</div>
        
        <!-- Label -->
        <div class="input-label">Add a word</div>
        
        <!-- Champ de saisie -->
        <input
          type="text"
          id="chinese"
          class="chinese-input"
          placeholder="Type your chinese characters here..."
          maxlength="6"
          autocomplete="off"
        >
        
        <!-- Message d'erreur -->
        <div id="errorMessage" class="error-message"></div>
        
        <!-- Bouton submit (caché par défaut) -->
        <button type="button" id="submitBtn" class="submit-btn">
          <i class="bi bi-search me-2"></i>Add the Word
        </button>
        
        <!-- Message de statut -->
        <div id="statusMessage" class="status-message"></div>
      </div>
    </div>

    <!-- ÉCRAN 2 : MOT EXISTANT -->
    <div id="existingWordScreen" class="screen">
      <div class="floating-card">
        <h3 class="text-success text-center mb-3">
          <i class="bi bi-check-circle-fill me-2"></i>Word Found
        </h3>
        
        <div class="chinese-preview" id="previewChinese"></div>
        
        <div class="word-info">
          <div class="word-info-row">
            <span class="word-info-label">Pinyin</span>
            <span class="word-info-value" id="displayPinyin">-</span>
          </div>
          <div class="word-info-row">
            <span class="word-info-label">English</span>
            <span class="word-info-value" id="displayEnglish">-</span>
          </div>
          <div class="word-info-row">
            <span class="word-info-label">Description</span>
            <span class="word-info-value" id="displayDescription">-</span>
          </div>
        </div>
        
        <div class="d-grid gap-2">
          <button class="btn btn-success btn-lg" id="confirmAddBtn" onclick="confirmAddExistingWord()">
            <i class="bi bi-check-lg me-2"></i>Confirm & Add
          </button>
          <button class="btn btn-outline-secondary" onclick="showNewWordScreen()">
            <i class="bi bi-pencil me-2"></i>Edit Before Adding
          </button>
          <button class="btn btn-outline-secondary" onclick="showInputScreen()">
            <i class="bi bi-arrow-left me-2"></i>Cancel
          </button>
        </div>
      </div>
    </div>

    <!-- ÉCRAN 3 : NOUVEAU MOT -->
    <div id="newWordScreen" class="screen">
      <div class="floating-card">
        <h3 class="text-warning text-center mb-3">
          <i class="bi bi-exclamation-triangle-fill me-2"></i>New Word
        </h3>
        
        <div class="chinese-preview" id="newPreviewChinese"></div>
        
        <input type="text" id="newPinyin" class="form-control mb-3" placeholder="Pinyin...">
        <input type="text" id="newEnglish" class="form-control mb-3" placeholder="English..." required>
        <textarea id="newDescription" class="form-control mb-3" rows="3" placeholder="Description..."></textarea>
        
        <div class="d-grid gap-2">
          <button class="btn btn-success btn-lg" onclick="confirmAddNewWord()">
            <i class="bi bi-check-lg me-2"></i>Add to Collection
          </button>
          <button class="btn btn-outline-secondary" onclick="showInputScreen()">
            <i class="bi bi-arrow-left me-2"></i>Cancel
          </button>
        </div>
      </div>
    </div>
    
  </div>
</div>

<!-- Animation de succès -->
<div id="successCheckmark" class="success-checkmark">
  <i class="bi bi-check-circle-fill"></i>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<script>

let currentChinese = '';
let existingWordData = null;

const chineseInput = document.getElementById('chinese');
const submitBtn = document.getElementById('submitBtn');
const errorMessage = document.getElementById('errorMessage');
const statusMessage = document.getElementById('statusMessage');

// Afficher/cacher le bouton selon le contenu
chineseInput.addEventListener('input', function() {
  const value = this.value.trim();
  
  if (value) {
    submitBtn.classList.add('visible');
    validateChineseInput(this);
  } else {
    submitBtn.classList.remove('visible');
    errorMessage.textContent = '';
    this.classList.remove('valid', 'invalid');
  }
});

// Validation des caractères chinois
function validateChineseInput(input) {
  const value = input.value;
  const nonChineseRegex = /[^\u4e00-\u9fff]/g;
  const nonChineseChars = value.match(nonChineseRegex);
  
  if (nonChineseChars) {
    input.classList.add('invalid');
    input.classList.remove('valid');
    errorMessage.textContent = '⚠️ Only Chinese characters please';
  } else {
    input.classList.add('valid');
    input.classList.remove('invalid');
    errorMessage.textContent = '';
  }
}

// Empêcher la saisie de caractères non-chinois
chineseInput.addEventListener('beforeinput', (e) => {
  if (e.data && !/[\u4e00-\u9fff]/.test(e.data)) {
    e.preventDefault();
  }
});

// Recherche au clic sur le bouton
submitBtn.addEventListener('click', searchAndAddWord);

// Recherche avec Enter
chineseInput.addEventListener('keypress', (e) => {
  if (e.key === 'Enter' && chineseInput.value.trim()) {
    searchAndAddWord();
  }
});

async function searchAndAddWord() {
  const chinese = chineseInput.value.trim();
  if (!chinese) return;
  
  // Vérifier que c'est bien du chinois
  if (/[^\u4e00-\u9fff]/.test(chinese)) {
    showStatus('Only Chinese characters allowed', 'error');
    return;
  }
  
  currentChinese = chinese;
  disableSubmitButton();
  showStatus('Searching...', 'info');

  try {
    const res = await fetch(`/check-mot/${encodeURIComponent(chinese)}`);
    const data = await res.json();

    if (data.exists) {
      existingWordData = data.mot;
      displayExistingWord(data.mot);
      showScreen('existingWordScreen');
    } else {
      existingWordData = null;
      displayNewWordForm();
      showScreen('newWordScreen');
    }
  } catch (err) {
    showStatus('Error searching database', 'error');
    enableSubmitButton();
  }
}

function displayExistingWord(word) {
  document.getElementById('previewChinese').textContent = word.chinese;
  document.getElementById('displayPinyin').textContent = word.pinyin || '-';
  document.getElementById('displayEnglish').textContent = word.english || '-';
  document.getElementById('displayDescription').textContent = word.description || '-';
  checkIfWordAlreadyCaptured(word.chinese);
}

async function checkIfWordAlreadyCaptured(chineseWord) {
  try {
    const response = await fetch(`/check-user-word/${encodeURIComponent(chineseWord)}`);
    if (!response.ok) {
      setConfirmButtonState(false);
      return;
    }
    const data = await response.json();
    setConfirmButtonState(data.alreadyExists);
  } catch (error) {
    setConfirmButtonState(false);
  }
}

function setConfirmButtonState(alreadyCaptured) {
  const confirmBtn = document.getElementById('confirmAddBtn');
  if (!confirmBtn) return;
  
  if (alreadyCaptured) {
    confirmBtn.disabled = true;
    confirmBtn.innerHTML = '<i class="bi bi-check2-circle me-2"></i>Already captured';
    confirmBtn.classList.remove('btn-success');
    confirmBtn.classList.add('btn-secondary');
  } else {
    confirmBtn.disabled = false;
    confirmBtn.innerHTML = '<i class="bi bi-check-lg me-2"></i>Confirm & Add';
    confirmBtn.classList.remove('btn-secondary');
    confirmBtn.classList.add('btn-success');
  }
}

function displayNewWordForm() {
  document.getElementById('newPreviewChinese').textContent = currentChinese;
  document.getElementById('newPinyin').value = '';
  document.getElementById('newEnglish').value = '';
  document.getElementById('newDescription').value = '';
}

async function confirmAddExistingWord() {
  if (!existingWordData) return;

  try {
    const res = await fetch('/ajouter', {
      method: 'POST',
      headers: {'Content-Type':'application/json'},
      body: JSON.stringify(existingWordData)
    });
    const data = await res.json();

    if (data.success) {
      showSuccessAnimation();
      setTimeout(resetForm, 1500);
    } else {
      showStatus(`❌ ${data.message}`, 'error');
    }
  } catch(err) {
    showStatus('❌ Server error', 'error');
  }
}

async function confirmAddNewWord() {
  const pinyin = document.getElementById('newPinyin').value.trim();
  const english = document.getElementById('newEnglish').value.trim();
  const description = document.getElementById('newDescription').value.trim();

  if (!english) {
    alert('English translation required');
    return;
  }

  const payload = {
    chinese: currentChinese,
    pinyin: pinyin,
    english: english,
    description: description
  };

  try {
    const res = await fetch('/ajouter', {
      method: 'POST',
      headers: {'Content-Type':'application/json'},
      body: JSON.stringify(payload)
    });
    const data = await res.json();

    if (data.success) {
      showSuccessAnimation();
      setTimeout(resetForm, 1500);
    } else {
      showStatus(`❌ ${data.message}`, 'error');
    }
  } catch(err) {
    showStatus('❌ Server error', 'error');
  }
}

// Animation de succès
function showSuccessAnimation() {
  const checkmark = document.getElementById('successCheckmark');
  checkmark.classList.add('show');
  
  setTimeout(() => {
    checkmark.classList.remove('show');
  }, 1000);
}

function resetForm() {
  chineseInput.value = '';
  chineseInput.classList.remove('valid', 'invalid');
  submitBtn.classList.remove('visible');
  showScreen('inputScreen');
  currentChinese = '';
  existingWordData = null;
  clearStatus();
  enableSubmitButton();
  chineseInput.focus();
}

function showScreen(screenId) {
  document.querySelectorAll('.screen').forEach(s => s.classList.remove('active'));
  document.getElementById(screenId).classList.add('active');
}

function showInputScreen() {
  showScreen('inputScreen');
  clearStatus();
}

function showNewWordScreen() {
  showScreen('newWordScreen');
}

function showStatus(message, type) {
  statusMessage.textContent = message;
  statusMessage.className = 'status-message';
  
  if (type === 'success') statusMessage.style.color = '#d4edda';
  if (type === 'error') statusMessage.style.color = '#ffe5e5';
  if (type === 'info') statusMessage.style.color = '#cfe2ff';
}

function clearStatus() {
  statusMessage.textContent = '';
}

function disableSubmitButton() {
  submitBtn.disabled = true;
  submitBtn.innerHTML = '<i class="bi bi-hourglass-split me-2"></i>Searching...';
}

function enableSubmitButton() {
  submitBtn.disabled = false;
  submitBtn.innerHTML = '<i class="bi bi-search me-2"></i>Add the Word';
}

// Focus automatique au chargement
window.addEventListener('load', () => {
  chineseInput.focus();
});

</script>
</body>
</html>